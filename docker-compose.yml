version: '3.8'  # The version of Docker Compose syntax used

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile-API              
    ports:
      - "48019:8080"                          
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
      - ConnectionStrings__ApplicationContext=Server=db;Database=CCM;Persist Security Info=True;User Id=sa;Password=TestPas$123!@#;Connection Timeout=300;TrustServerCertificate=True; 
      - UseInMemoryDatabase=false
      - Elasticsearch__Uri=
    depends_on:
      - db        
      - elasticsearch
  web:
    build:
      context: .
      dockerfile: Dockerfile-Web               
    ports:
      - "48020:8080"  # HTTP
      - "48021:443"  # HTTPS   
    volumes:
      - ./certs:/https  # Mount the certificate- 
      - ./uploads:/app/uploads
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - ConnectionStrings__ApplicationContext=Server=db;Database=CCM;Persist Security Info=True;User Id=sa;Password=TestPas$123!@#;Connection Timeout=300;TrustServerCertificate=True;
      - ConnectionStrings__IdentityContext=Server=db;Database=CCM;Persist Security Info=True;User Id=sa;Password=TestPas$123!@#;Connection Timeout=300;TrustServerCertificate=True; 
      - ConnectionStrings__ReportContext=Server=db;Database=CCM;Persist Security Info=True;User Id=sa;Password=TestPas$123!@#;Connection Timeout=300;TrustServerCertificate=True;
      - UseInMemoryDatabase=false
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=certpass123!@#
      - SslCertificate__Path=/https/aspnetcore.pfx
      - SslCertificate__Password=certpass123!@#
      - UsersUpload__UploadFilesPath=/app/uploads
      - ASPNETCORE_URLS=https://+:443;http://+:8080
      - BaseUrl=https://localhost:48021
      - WebSocket=wss://localhost:52685
      - Elasticsearch__Uri=
    depends_on:
      - db      
      - elasticsearch
  db:
    image: "mcr.microsoft.com/mssql/server:2019-latest"  
    environment:
      SA_PASSWORD: "TestPas$123!@#"         
      ACCEPT_EULA: "Y"                    
    ports:
      - "1433:1433"                       
    volumes:
      - sql_data:/var/opt/mssql
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node  # Suitable for development and testing
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Heap size settings; adjust as needed
      - xpack.security.enabled=false  # Disable security for development; enable in production
    ports:
      - "48022:9200"  # Host port 48022 maps to container port 9200
    volumes:
      - es_data:/usr/share/elasticsearch/data  # Persistent storage for Elasticsearch data
volumes:
  sql_data:                               
  es_data:
    driver: local                           
